{"version":3,"sources":["components/ValueBlock.tsx","bitfields.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","paper","fontFamily","padding","spacing","textAlign","borderRadius","m0","margin","hand","cursor","ValueBlock","props","classes","Paper","className","style","color","fontSize","title","tooltip","Tooltip","value","Characteristics","Map","getCharacteristicsString","code","results","key","push","join","Machine","Subsystem","DLLCharacteristics","SectionCharacteristics","getSectionCharacteristics","root","flexGrow","boxShadow","background","address","palette","text","secondary","uploadButton","uploadInput","opacity","paddingTop","paddingBottom","App","React","useState","undefined","pe","setPe","sections","setSections","Button","variant","type","id","onChange","e","file","target","files","item","reader","FileReader","onload","arrayBuffer","this","result","array","Uint8Array","then","pe_wasm","parse_pe","JSON","parse","get_sections","console","log","readAsArrayBuffer","slice","Grid","container","xs","pipe","fromNullable","dos_header","signature","toString","map","it","getOrElse","pe_pointer","coff_header","machine","get","toUndefined","number_of_sections","time_date_stamp","Date","getFullYear","getMonth","getDate","size_of_optional_header","characteristics","optional_header","standard_fields","magic","major_linker_version","minor_linker_version","size_of_code","size_of_initialized_data","size_of_uninitialized_data","address_of_entry_point","base_of_code","base_of_data","windows_fields","image_base","section_alignment","file_alignment","major_operating_system_version","minor_operating_system_version","major_image_version","minor_image_version","major_subsystem_version","minor_subsystem_version","win32_version_value","size_of_image","size_of_headers","check_sum","subsystem","dll_characteristics","getDLLCharacteristicsString","size_of_stack_reserve","size_of_stack_commit","size_of_heap_reserve","size_of_heap_commit","loader_flags","number_of_rva_and_sizes","val","index","Fragment","data_directories","chain","virtual_address","size","name","virtual_size","size_of_raw_data","pointer_to_raw_data","pointer_to_relocations","pointer_to_linenumbers","number_of_relocations","number_of_linenumbers","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.91b281b9.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from \"@material-ui/core/Paper\";\nimport {Tooltip} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        fontFamily: \"monospace\",\n        padding: theme.spacing(0),\n        textAlign: 'center',\n        borderRadius: 0,\n    },\n    m0: {\n        margin: 0\n    },\n    hand: {\n        cursor: \"pointer\"\n    }\n}));\n\ninterface ValueBlockProps {\n    title: string;\n    value: string;\n    color?: string;\n    fontSize?: string;\n    tooltip?: string;\n}\n\nexport function ValueBlock(props: ValueBlockProps) {\n    const classes = useStyles();\n    return (\n        <Paper className={classes.paper} style={({\"background\": props.color || \"white\"})}>\n            <h3 className={classes.m0}\n                style={({\"fontSize\": props.fontSize || \"12px\"})}\n            >{props.title}</h3>\n            {props.tooltip ? (<Tooltip className={classes.hand} title={props.tooltip}>\n                <p className={classes.m0}>{props.value}</p>\n            </Tooltip>) : (\n                <p className={classes.m0}>{props.value}</p>\n            )\n            }\n\n\n        </Paper>\n    )\n}\n","export const Characteristics = new Map([\n    [0x0001, 'RELOCS_STRIPPED'],\n    [0x0002, 'EXECUTABLE_IMAGE'],\n    [0x0004, 'LINE_NUMS_STRIPPED'],\n    [0x0008, 'LOCAL_SYMS_STRIPPED'],\n    [0x0010, 'AGGRESSIVE_WS_TRIM'],\n    [0x0020, 'LARGE_ADDRESS_AWARE'],\n    [0x0080, 'BYTES_REVERSED_LO'],\n    [0x0100, '32BIT_MACHINE'],\n    [0x0200, 'DEBUG_STRIPPED'],\n    [0x0400, 'REMOVABLE_RUN_FROM_SWAP'],\n    [0x0800, 'NET_RUN_FROM_SWAP'],\n    [0x1000, 'SYSTEM'],\n    [0x2000, 'DLL'],\n    [0x4000, 'UP_SYSTEM_ONLY'],\n    [0x8000, 'BYTES_REVERSED_HI'],\n]);\n\nexport function getCharacteristicsString(code: number): string {\n    let results = [];\n    for (let [key, value] of Characteristics) {\n        if (code & key) {\n            results.push(value);\n        }\n    }\n    return results.join('\\n')\n}\n\nexport const Machine = new Map([\n    [0x0, \"UNKNOWN\"],\n    [0x1d3, \"AM33\"],\n    [0x8664, \"AMD64\"],\n    [0x1c0, \"ARM\"],\n    [0xaa64, \"ARM64\"],\n    [0x1c4, \"ARMNT\"],\n    [0xebc, \"EBC\"],\n    [0x14c, \"I386\"],\n    [0x200, \"IA64\"],\n    [0x9041, \"M32R\"],\n    [0x266, \"MIPS16\"],\n    [0x366, \"MIPSFPU\"],\n    [0x466, \"MIPSFPU16\"],\n    [0x1f0, \"POWERPC\"],\n    [0x1f1, \"POWERPCFP\"],\n    [0x166, \"R4000\"],\n    [0x5032, \"RISCV32\"],\n    [0x5064, \"RISCV64\"],\n    [0x5128, \"RISCV128\"],\n    [0x1a2, \"SH3\"],\n    [0x1a3, \"SH3DSP\"],\n    [0x1a6, \"SH4\"],\n    [0x1a8, \"SH5\"],\n    [0x1c2, \"THUMB\"],\n    [0x169, \"WCEMIPSV2\"],\n]);\n\nexport const Subsystem = new Map([\n    [0, \"UNKNOWN\"],\n    [1, \"NATIVE\"],\n    [2, \"WINDOWS_GUI\"],\n    [3, \"WINDOWS_CUI\"],\n    [5, \"OS2_CUI\"],\n    [7, \"POSIX_CUI\"],\n    [8, \"NATIVE_WINDOWS\"],\n    [9, \"WINDOWS_CE_GUI\"],\n    [10, \"EFI_APPLICATION\"],\n    [11, \"EFI_BOOT_SERVICE_DRIVER\"],\n    [12, \"EFI_RUNTIME_DRIVER\"],\n    [13, \"EFI_ROM\"],\n    [14, \"XBOX\"],\n    [16, \"WINDOWS_BOOT_APPLICATION\"],\n]);\n\nexport const DLLCharacteristics = new Map([\n    [0x0020, \"HIGH_ENTROPY_VA\"],\n    [0x0040, \"DYNAMIC_BASE\"],\n    [0x0080, \"FORCE_INTEGRITY\"],\n    [0x0100, \"NX_COMPAT\"],\n    [0x0200, \"NO_ISOLATION\"],\n    [0x0400, \"NO_SEH\"],\n    [0x0800, \"NO_BIND\"],\n    [0x1000, \"APPCONTAINER\"],\n    [0x2000, \"WDM_DRIVER\"],\n    [0x4000, \"GUARD_CF\"],\n    [0x8000, \"TERMINAL_SERVER_AWARE\"],\n]);\n\nexport function getDLLCharacteristicsString(code: number): string {\n    let results = [];\n    for (let [key, value] of DLLCharacteristics) {\n        if (code & key) {\n            results.push(value);\n        }\n    }\n    return results.join('\\n')\n}\n\nexport const SectionCharacteristics = new Map([\n    [0x00000008, \"TYPE_NO_PAD\"],\n    [0x00000020, \"CNT_CODE\"],\n    [0x00000040, \"CNT_INITIALIZED_DATA\"],\n    [0x00000080, \"CNT_UNINITIALIZED_DATA\"],\n    [0x00000100, \"LNK_OTHER\"],\n    [0x00000200, \"LNK_INFO\"],\n    [0x00000800, \"LNK_REMOVE\"],\n    [0x00001000, \"LNK_COMDAT\"],\n    [0x00008000, \"GPREL\"],\n    [0x00100000, \"ALIGN_1BYTES\"],\n    [0x00200000, \"ALIGN_2BYTES\"],\n    [0x00300000, \"ALIGN_4BYTES\"],\n    [0x00400000, \"ALIGN_8BYTES\"],\n    [0x00500000, \"ALIGN_16BYTES\"],\n    [0x00600000, \"ALIGN_32BYTES\"],\n    [0x00700000, \"ALIGN_64BYTES\"],\n    [0x00800000, \"ALIGN_128BYTES\"],\n    [0x00900000, \"ALIGN_256BYTES\"],\n    [0x00A00000, \"ALIGN_512BYTES\"],\n    [0x00B00000, \"ALIGN_1024BYTES\"],\n    [0x00C00000, \"ALIGN_2048BYTES\"],\n    [0x00D00000, \"ALIGN_4096BYTES\"],\n    [0x00E00000, \"ALIGN_8192BYTES\"],\n    [0x01000000, \"LNK_NRELOC_OVFL\"],\n    [0x02000000, \"MEM_DISCARDABLE\"],\n    [0x04000000, \"MEM_NOT_CACHED\"],\n    [0x08000000, \"MEM_NOT_PAGED\"],\n    [0x10000000, \"MEM_SHARED\"],\n    [0x20000000, \"MEM_EXECUTE\"],\n    [0x40000000, \"MEM_READ\"],\n    [0x80000000, \"MEM_WRITE\"],\n]);\n\n\nexport function getSectionCharacteristics(code: number): string {\n    let results = [];\n    for (let [key, value] of SectionCharacteristics) {\n        if (code & key) {\n            results.push(value);\n        }\n    }\n    return results.join('\\n')\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport './App.css';\nimport {Grid} from \"@material-ui/core\";\nimport {ValueBlock} from \"./components/ValueBlock\";\nimport {HeaderExport} from \"pe-wasm\";\nimport {fromNullable} from \"fp-ts/es6/Option\";\nimport {pipe} from \"fp-ts/lib/pipeable\";\nimport {chain, getOrElse, map, toUndefined} from \"fp-ts/lib/Option\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    getCharacteristicsString,\n    getDLLCharacteristicsString,\n    getSectionCharacteristics,\n    Machine,\n    Subsystem\n} from \"./bitfields\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 0,\n    },\n    title: {\n        boxShadow: \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\n        background: \"#6633FF\",\n        color: \"white\"\n    },\n    address: {\n        fontFamily: \"monospace\"\n    },\n    paper: {\n        padding: theme.spacing(0),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    uploadButton: {\n        padding: 0,\n        margin: \"8px\",\n    },\n    uploadInput: {\n        opacity: 0,\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\"\n    }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [pe, setPe] = React.useState(undefined as HeaderExport | undefined);\n    const [sections, setSections] = React.useState([]);\n    let dataDicts = [\n        \"ExportTable\",\n        \"ImportTable\",\n        \"ResourceTable\",\n        \"ExceptionTable\",\n        \"CertificateTable\",\n\n        \"BaseLocationTable\",\n        \"Debug\",\n        \"ArchData\",\n        \"GlobalPtr\",\n        \"TLSTable\",\n\n        \"LoadConfigTable\",\n        \"BoundImport\",\n        \"ImportAddressTable\",\n        \"DelayImportDescriptor\",\n        \"CLRRuntimeHeader\"\n    ];\n    return (\n        <div className=\"App\">\n            <Button color=\"primary\" className={classes.uploadButton} variant=\"contained\">\n                <span style={({\"position\": \"absolute\"})}>Upload PE file</span>\n                <input type=\"file\" className={classes.uploadInput} id=\"inputFile\" onChange={(e) => {\n                    let file = e.target.files?.item(0)!;\n                    const reader = new FileReader();\n                    reader.onload = function () {\n                        const arrayBuffer = this.result;\n                        const array = new Uint8Array(arrayBuffer as any);\n                        import(\"pe-wasm\").then((pe_wasm) => {\n                            let pe = pe_wasm.parse_pe(array);\n                            let sections = JSON.parse(pe_wasm.get_sections(array)!);\n                            console.log(sections);\n                            setPe(pe);\n                            setSections(sections as any);\n                        })\n                    };\n                    reader.readAsArrayBuffer(file.slice(0))\n                }}/>\n            </Button>\n            <Grid container spacing={0}>\n                <Grid item xs={2}>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>0</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>1</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>2</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>3</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>4</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>5</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>6</span>\n                </Grid>\n                <Grid className={classes.title} item xs={1}>\n                    <span>7</span>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>0x00</span>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title=\"Signature\" value={\n                        pipe(fromNullable(pe?.dos_header.signature?.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"#CD5B6C\"}/>\n                </Grid>\n                <Grid item xs={6}>\n                    <ValueBlock title=\"DOS Header\" value={\"---\"} color={\"rgb(96,140,196)\"}/>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>0x08</span>\n                </Grid>\n                <Grid className={classes.title} item xs={8}>\n                    <ValueBlock title=\"DOS Header\" value={\"---\"} color={\"rgb(96,140,196)\"}/>\n                </Grid>\n                <Grid item xs={2}>\n\n                </Grid>\n                <Grid item xs={2}>\n                    <span className={classes.address}>...</span>\n                </Grid>\n                <Grid className={classes.title} item xs={8}>\n                    ......\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>0x38</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title=\"DOS Header\" value={\"---\"} color={\"rgb(96,140,196)\"}/>\n                </Grid>\n\n                <Grid item xs={4}>\n                    <ValueBlock title={\"PE Header Ptr\"} value={\n                        pipe(fromNullable(pe?.dos_header.pe_pointer?.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(204, 224, 118)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>0x40</span>\n                </Grid>\n                <Grid className={classes.title} item xs={8}>\n                    <ValueBlock title=\"DOS Stub\" value={\"---\"} color={\"rgb(96,140,196)\"}/>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n                <Grid item xs={2}>\n                    <span className={classes.address}>...</span>\n                </Grid>\n                <Grid className={classes.title} item xs={8}>\n                    ......\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"Signature\"} value={\n                        pipe(fromNullable(pe?.signature),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"Machine\"}\n                                value={\n                                    pipe(fromNullable(pe?.coff_header.machine),\n                                        map((it) => Machine.get(it)!),\n                                        getOrElse(() => '---')\n                                    )\n                                }\n                                tooltip={\n                                    pipe(fromNullable(pe?.coff_header.machine?.toString(16)),\n                                        map((it) => 'raw value: 0x' + it),\n                                        toUndefined\n                                    )\n                                } color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"#Sections\"} value={\n                        pipe(fromNullable(pe?.coff_header.number_of_sections.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 8),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"Date Time\"} value={\n                        pipe(fromNullable(pe?.coff_header.time_date_stamp),\n                            map(it => new Date(it * 1000)),\n                            map(it => `${it.getFullYear()}-${it.getMonth() < 9 ? '0' : ''}${it.getMonth() + 1}-${it.getDate()}`),\n                            getOrElse(() => '---')\n                        )\n                    } tooltip={\n                        pipe(fromNullable(pe?.coff_header.time_date_stamp),\n                            map(it => \"Unix time: \" + it),\n                            toUndefined\n                        )\n                    }\n                                color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"Deprecated\"} value={\"---\"} color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 16),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"Deprecated\"} value={\"---\"} color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"OptHeaderSize\"} value={\n                        pipe(fromNullable(pe?.coff_header.size_of_optional_header?.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"Characts\"} value={\n                        pipe(fromNullable(pe?.coff_header.characteristics.toString()),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } tooltip={\n                        pipe(fromNullable(pe?.coff_header.characteristics),\n                            map(getCharacteristicsString),\n                            toUndefined\n                        )\n                    } color={\"rgb(219, 255, 200)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 24),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"Magic\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.magic),\n                            map(it => it === 0x10b ? 'PE32' : 'PE32+'),\n                            getOrElse(() => '---')\n                        )\n                    } tooltip={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.magic.toString(16)),\n                            map((it) => 'raw value: 0x' + it),\n                            toUndefined\n                        )\n                    } color={\"rgb(254, 232, 152)\"\n                    }></ValueBlock>\n                </Grid>\n                <Grid item xs={1}>\n                    <ValueBlock title={\"MajorLV\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.major_linker_version.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={1}>\n                    <ValueBlock title={\"MinorLV\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.minor_linker_version.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"SizeOfCode\"}\n                                value={pipe(fromNullable(pe?.optional_header?.standard_fields.size_of_code.toString()),\n                                    getOrElse(() => '---')\n                                )} color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 32),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"SizeOfInitData\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.size_of_initialized_data.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"SizeOfUninitData\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.size_of_uninitialized_data.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 40),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"EntryPointAddr\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.address_of_entry_point.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"BaseOfCode\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.base_of_code.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 48),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"BaseOfData\"} value={\n                        pipe(fromNullable(pe?.optional_header?.standard_fields.base_of_data.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 232, 152)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"ImageBase\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.image_base.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 56),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"SectionAlignment\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.section_alignment.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"FileAlignment\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.file_alignment.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                    <span className={classes.address}>{\n                        pipe(fromNullable(pe?.dos_header.pe_pointer),\n                            map(it => it + 64),\n                            map((it) => '0x' + it.toString(16)),\n                            getOrElse(() => '')\n                        )\n                    }</span>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"MajorOSVersion\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.major_operating_system_version.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"MinorOSVersion\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.minor_operating_system_version.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"MajorImageVer\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.major_image_version.toString(16)),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"MinorImageVer\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.minor_image_version.toString(16)),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                     <span className={classes.address}>{\n                         pipe(fromNullable(pe?.dos_header.pe_pointer),\n                             map(it => it + 72),\n                             map((it) => '0x' + it.toString(16)),\n                             getOrElse(() => '')\n                         )\n                     }</span>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"MajorSubsysVer\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.major_subsystem_version.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"MinorSubsysVer\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.minor_subsystem_version.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"Win32Version\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.win32_version_value.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                     <span className={classes.address}>{\n                         pipe(fromNullable(pe?.dos_header.pe_pointer),\n                             map(it => it + 80),\n                             map((it) => '0x' + it.toString(16)),\n                             getOrElse(() => '')\n                         )\n                     }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"SizeOfImage\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.size_of_image.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"SizeOfHeaders\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.size_of_headers.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                     <span className={classes.address}>{\n                         pipe(fromNullable(pe?.dos_header.pe_pointer),\n                             map(it => it + 88),\n                             map((it) => '0x' + it.toString(16)),\n                             getOrElse(() => '')\n                         )\n                     }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"CheckSum\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.check_sum.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"Subsystem\"}\n                                value={\n                                    pipe(fromNullable(pe?.optional_header?.windows_fields.subsystem),\n                                        map((it) => Subsystem.get(it)!),\n                                        getOrElse(() => '---')\n                                    )\n                                }\n                                tooltip={\n                                    pipe(fromNullable(pe?.optional_header?.windows_fields.subsystem.toString(16)),\n                                        map((it) => 'raw value: 0x' + it),\n                                        toUndefined\n                                    )\n                                } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                    <ValueBlock title={\"DllCharacts\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.dll_characteristics.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } tooltip={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.dll_characteristics),\n                            map((it) => getDLLCharacteristicsString(it)),\n                            toUndefined\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                     <span className={classes.address}>{\n                         pipe(fromNullable(pe?.dos_header.pe_pointer),\n                             map(it => it + 96),\n                             map((it) => '0x' + it.toString(16)),\n                             getOrElse(() => '')\n                         )\n                     }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"StackReserve\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.size_of_stack_reserve.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"StackCommit\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.size_of_stack_commit.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                     <span className={classes.address}>{\n                         pipe(fromNullable(pe?.dos_header.pe_pointer),\n                             map(it => it + 104),\n                             map((it) => '0x' + it.toString(16)),\n                             getOrElse(() => '')\n                         )\n                     }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"HeapReserve\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.size_of_heap_reserve.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"HeapCommit\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.size_of_heap_commit.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                <Grid item xs={2}>\n                     <span className={classes.address}>{\n                         pipe(fromNullable(pe?.dos_header.pe_pointer),\n                             map(it => it + 112),\n                             map((it) => '0x' + it.toString(16)),\n                             getOrElse(() => '')\n                         )\n                     }</span>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"LoaderFlags\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.loader_flags.toString(16)),\n                            map((it) => '0x' + it),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={4}>\n                    <ValueBlock title={\"#RvaAndSizes\"} value={\n                        pipe(fromNullable(pe?.optional_header?.windows_fields.number_of_rva_and_sizes.toString()),\n                            getOrElse(() => '---')\n                        )\n                    } color={\"rgb(254, 180, 184)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                {\n                    dataDicts.map((val, index) => {\n                        return (<React.Fragment key={index}>\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={val}\n                                                value={\n                                                    pipe(fromNullable(pe?.optional_header?.data_directories as any),\n                                                        chain(it => fromNullable(it[`data_directories${index}`])),\n                                                        map(it => it.virtual_address.toString(16)),\n                                                        map((it) => '0x' + it),\n                                                        getOrElse(() => '---'))\n                                                }\n                                                color={\"rgb(150, 230, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"Size\"} value={\n                                        pipe(fromNullable(pe?.optional_header?.data_directories as any),\n                                            chain(it => fromNullable(it[`data_directories${index}`])),\n                                            map(it => it.size.toString()),\n                                            getOrElse(() => '---'))\n                                    } color={\"rgb(150, 230, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n                            </React.Fragment>\n                        )\n                    })\n                }\n\n                <Grid item xs={2}>\n                </Grid>\n                <Grid item xs={8}>\n                    <ValueBlock title={\"0-filled\"} value={\"0\"} color={\"rgb(150, 230, 255)\"}></ValueBlock>\n                </Grid>\n                <Grid item xs={2}>\n                </Grid>\n\n                {\n                    sections.map((val: {\n                        name: string,\n                        virtual_size: number,\n                        virtual_address: number,\n                        characteristics: number,\n                        number_of_linenumbers: number,\n                        number_of_relocations: number\n                        pointer_to_linenumbers: number,\n                        pointer_to_raw_data: number,\n                        pointer_to_relocations: number,\n                        size_of_raw_data: number,\n                    }) => {\n                        return (<React.Fragment key={val.name}>\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={8}>\n                                    <ValueBlock title={\"Name\"}\n                                                value={val.name}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"VirtualSize\"}\n                                                value={val.virtual_size.toString()}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"VirtualAddr\"}\n                                                value={'0x' + val.virtual_address.toString(16)}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"RawDataSize\"}\n                                                value={val.size_of_raw_data.toString()}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"RawDataPtr\"}\n                                                value={'0x' + val.pointer_to_raw_data.toString(16)}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"RelocationsPtr\"}\n                                                value={'0x' + val.pointer_to_relocations.toString(16)}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"LinenumbersPtr\"}\n                                                value={'0x' + val.pointer_to_linenumbers.toString(16)}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={2}>\n                                    <ValueBlock title={\"#Relocations\"}\n                                                value={val.number_of_relocations.toString()}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <ValueBlock title={\"#Linenumbers\"}\n                                                value={val.number_of_linenumbers.toString()}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <ValueBlock title={\"Characts\"}\n                                                value={'0x' + val.characteristics.toString(16)}\n                                                tooltip={getSectionCharacteristics(val.characteristics)}\n                                                color={\"rgb(251, 131, 255)\"}></ValueBlock>\n                                </Grid>\n                                <Grid item xs={2}>\n                                </Grid>\n\n                            </React.Fragment>\n                        )\n                    })\n                }\n\n            </Grid>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}